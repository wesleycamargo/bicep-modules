name: CI

on:
  push:
    branches: [ "main" ]  

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version
        shell: pwsh
        run: |
          
          cd $env:GITHUB_WORKSPACE

          # Validate version file
          $lastTag = git describe --tags --abbrev=0  
          (git diff --name-only $lastTag $env:GITHUB_REF)
          $versionFile = (git diff --name-only $lastTag $env:GITHUB_REF) -match "/version.json"
          
          $versionFile
          
          if($versionFile.Count -gt 1){ 
            Write-Error "More than one version file updated"
          }elseif($null -eq $versionFile -or $versionFile.Count -eq 0 -or $versionFile -eq $false){
            Write-Error "No version files were updated"
          }

          $versionFile = Get-Content -Raw -Path $versionFile | ConvertFrom-Json

          Write-Host "Module changed: '$($versionFile.module)'"
          Write-Host "Module version: '$($versionFile.version)'"
          
          Write-Output "bicepModuleVersion=$($versionFile.version)" >> $env:GITHUB_ENV
          Write-Output "bicepModuleName=$($versionFile.module)" >> $env:GITHUB_ENV
      
      - name: Validate changed modules
        shell: pwsh
        run: |
          Write-Host "Obtaining changed files..."
          $lastTag = git describe --tags --abbrev=0  
          $changedFiles = (git diff --name-only $lastTag $env:GITHUB_REF) | Where-Object { $_ -like "*src/modules*" }

          foreach ($file in $changedFiles ) {
              Write-Host "Validating: '$file'"
              if ($file -notlike "*/$env:bicepModuleName/*") {
                  Write-Error "Error: Identified changes in a module other than '$env:bicepModuleName'"
              }
          }

      - name: Create git tag
        shell: pwsh
        run: |
          
          $tagVersion = "$env:bicepModuleName-v$env:bicepModuleVersion"
          Write-Host $tagVersion

          cd $env:GITHUB_WORKSPACE

          $existingTag = git tag -l $tagVersion

          if($existingTag){
            Write-Host "Version '$tagVersion' already exist"
            exit 1
          }
            
          Write-Host "Generating tag '$tagVersion'"
          git tag $tagVersion
          git push --tags