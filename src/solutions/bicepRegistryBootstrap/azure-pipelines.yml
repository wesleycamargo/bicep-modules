trigger:
  branches:
    include:
      - feature/*
  paths:
    include:
      - src/solutions/bicepRegistryBootstrap/*
  
pool:
  vmImage: ubuntu-latest

stages:
  - stage: dev
    jobs:
      - job: BootstrapBicepRegistry
        displayName: Bootstrap Bicep Registry
        steps:
          - task: AzureCLI@2
            enabled: false
            inputs:
              azureSubscription: 'ServicePrincipal'
              scriptType: 'pscore'
              scriptLocation: 'scriptPath'
              scriptPath: '$(Build.SourcesDirectory)/src/solutions/bicepRegistryBootstrap/bicepRegistryBootstrap.ps1'
              arguments: '-WorkingDirectory $(Build.SourcesDirectory)'

          - task: AzureCLI@2
            displayName: Deploy Azure Container Registry
            enabled: true
            inputs:
              azureSubscription: "ServicePrincipal"
              scriptType: "pscore"
              scriptLocation: "inlineScript"
              # workingDirectory: $(Build.SourcesDirectory)
              inlineScript: |
                $WorkloadAffix = "br"
                $ApplicationSufix = "bcp"
                $Location = "westeurope"

                Write-Host "Creating resource group..."

                $resourceGroup = az deployment sub create `
                    -f "./src/solutions/bicepRegistryBootstrap/resourceGroup/main.bicep" `
                    -l $Location `
                    --parameters workloadAffix=$WorkloadAffix applicationSufix=$ApplicationSufix `
                    -o json | ConvertFrom-Json
                
                Write-Host "Creating container registry..."
                
                $acrDeploy = az deployment group create `
                    -f "./src/solutions/bicepRegistryBootstrap/azureContainerRegistry/main.bicep" `
                    -g $resourceGroup.Properties.Outputs.resourceGroupName.value `
                    --parameters workloadAffix=$WorkloadAffix applicationSufix=$ApplicationSufix instanceNumber=001
                
                $acrId = $acrDeploy.properties.outputs.acrId.value
                
                Write-Host "##vso[task.setvariable variable=acrId]$acrId"

          - task: AzureCLI@2
            displayName: Deploy bicep modules
            enabled: true
            inputs:
              azureSubscription: "ServicePrincipal"
              scriptType: "pscore"
              scriptLocation: "inlineScript"
              workingDirectory: $(Build.SourcesDirectory)
              inlineScript: |
                Write-Host "Loading existing modules..."
                                
                # $acrId = "brmodexpcr001.azurecr.io"

                $coreModules = "$(Build.SourcesDirectory)/src/modules"

                $versionFiles = Get-ChildItem $coreModules -Recurse -Filter "version.json" | Select-Object FullName 

                foreach ($versionFilePath in $versionFiles) {
                  Write-Host "Processing $($versionFilePath.FullName)"  
                
                  $versionFile = Get-Content -Raw -Path $versionFilePath.FullName | ConvertFrom-Json

                  $gitTagVersion = "$($versionFile.module)-v$($versionFile.version)"

                  Write-Host "Creating git tag: '$gitTagVersion'"

                  $existingTag = git tag -l $gitTagVersion

                  if($existingTag){
                    Write-Host "##[warning]Version '$gitTagVersion' already exist"
                  }else{
                    Write-Host "Generating tag '$gitTagVersion'"
                    git tag $gitTagVersion
                    git push --tags     
                  }
                  
                  Write-Host "Pushing bicep module '$gitTagVersion' to ACR"

                  Write-Host "Module: '$($versionFile.module)'"
                  Write-Host "Module version: '$($versionFile.version)'"

                  $bicepModule = $versionFilePath.FullName.Replace("version.json", "main.bicep")
                  
                  az bicep publish --file $bicepModule --target "br:$acrId/bicep/modules/$($versionFile.module):v$($versionFile.version)"
                }                    